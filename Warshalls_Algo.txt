using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Warshalls_Algorithm
{
    class GFC
    {
        static int v = 4;

        public void transitiveClosure(int[,] graph)
        {
            int[,] reach = new int[v, v];
            int i, j, k;
            for (i = 0; i < v; i++)
            for (j = 0; j < v; j++)
                reach[i, j] = graph[i, j];

            for (k = 0; k < v; k++)
            {
            for (i = 0; i < v; i++)
            {
            for (j = 0; j < v; j++)
              {
               reach[i, j] = (reach[i, j] != 0) || ((reach[i, k] != 0) && (reach[k, j] != 0)) ? 1 : 0;
                printSolution(reach);
                    }
                }
            }
        }
  
        public void printSolution(int [,]reach)  
    {  
        Console.WriteLine("Following matrix is transitive" + " closure of the given graph");  
        for (int i = 0; i < v; i++)  
        {  
            for (int j = 0; j < v; j++)  
                Console.Write(reach[i, j] + " ");  
            Console.WriteLine();  
      }  
     }
    }
    }


    class Program
    {
        static void Main(string[] args)
        {
            int[,] graph = new int[,] { { 1, 1, 0, 1 }, { 0, 1, 1, 0 }, { 0, 0, 1, 1 }, { 0, 0, 0, 1 } }; 
            GFC g = new GFC();
            g.transitiveClosure(graph);
        }
    }
}